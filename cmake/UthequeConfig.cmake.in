# - Config file for the utheque package
# example:
# find_package(Utheque REQUIRED)
# add_executable(your_example example.cpp)
# target_link_libraries(your_example Utheque)


####### Corresponds to @PACKAGE_INIT@  #######

get_filename_component(PACKAGE_PREFIX_DIR "${CMAKE_CURRENT_LIST_DIR}/../../../" ABSOLUTE)

macro(set_and_check _var _file)
  set(${_var} "${_file}")
  if(NOT EXISTS "${_file}")
    message(FATAL_ERROR "File or directory ${_file} referenced by variable ${_var} does not exist !")
  endif()
endmacro()

macro(check_required_components _NAME)
  foreach(comp ${${_NAME}_FIND_COMPONENTS})
    if(NOT ${_NAME}_${comp}_FOUND)
      if(${_NAME}_FIND_REQUIRED_${comp})
        set(${_NAME}_FOUND FALSE)
      endif()
    endif()
  endforeach()
endmacro()

####################################################################################

include(CMakeFindDependencyMacro)
include(FindPackageHandleStandardArgs)

# CMAKE_MODULE_PATH
set(CMAKE_MODULE_PATH "@Utheque_CMAKE_MODULE_PATH@")

find_package(Boost REQUIRED filesystem)

set(Utheque_INCLUDE_DIRS "@Utheque_INCLUDE_DIRS@")

set(Utheque_LIBRARIES "Boost::filesystem")


# Check cmake version
if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.6)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6...3.20)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget Utheque)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)



# Create imported target Utheque

add_library(Utheque INTERFACE IMPORTED)
set_target_properties(Utheque PROPERTIES
  INTERFACE_LINK_LIBRARIES "${Utheque_LIBRARIES}"
  INTERFACE_COMPILE_DEFINITIONS @Utheque_PREFIX@
  INTERFACE_INCLUDE_DIRECTORIES "${Utheque_INCLUDE_DIRS}")

# Handle the QUIET and REQUIRED arguments
find_package_handle_standard_args(
    Utheque #Package name
    DEFAULT_MSG
    # Variables required to evaluate as TRUE
    Utheque_INCLUDE_DIRS)

mark_as_advanced(Utheque_INCLUDE_DIRS Utheque_FOUND)


if(CMAKE_VERSION VERSION_LESS 2.8.12)
  message(FATAL_ERROR "This file relies on consumers using CMake 2.8.12 or greater.")
endif()

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)